<?phpnamespace app\home\controller;use app\home\model\BbcType;use app\home\model\Posts as PostsModel;use app\home\model\PostsComments;use app\home\model\User;use think\Controller;use think\Db;use think\Request;use think\Session;use app\home\model\Share;class Posts extends Controller{    /*     * 帖子     * */    public function index(Request $requests, BbcType $bbcType, PostsModel $posts)    {        $request = $requests->param();        $data['bbc_type'] = $bbcType->where(['status' => 1])->field('type_title,id')->select();        $oid = $bbcType->where(['status' => 1])->field('id')->value('id');        //帖子列表 筛选条件 分类id 关键词        $where['status'] = 1;        $type_id = 0 ;        if (!empty($request['type_id'])) {            $where['type_id'] = $request['type_id'];            $type_id = $request['type_id'];        }else{            $type_id = $oid;        }        if (!empty($request['keyword'])) {            $where['title'] = ['like', '%' . $request['keyword'] . '%'];        }        //列表        $data['list'] = $posts->where($where)->field('id,title,picarr,picarr_type,praise,comments_num,hot_state,share_num')->order('id desc')->select();        return $this->fetch(            'index', [                'data' => $data,                'title' => "万淘热点",                'type_id' => $type_id,            ]        );    }    /*        * 帖子---2、帖子详情         * 参数：帖子的id        */    public function info(Request $requests, User $user, Posts $posts, PostsComments $comments)    {        $jssdk = new Share("wx76f12421c3192e40", "d810e41dcc9d3509c0800fd6bd2f1e9b");        $signPackage = $jssdk->GetSignPackage();        $request = $requests->param();        $request['user_id'] = Session::get('user_id');        //消息表标为已读        Db::name('news_info')->where(['user_id' => $request['user_id'], 'other_id' => $request['id'], 'read_state' => 0, 'type' => 2])->update(['read_state' => 1]);        $data = Db::view('posts', 'id,title,picarr,content,user_id,picarr_type,describe,praise,comments_num,create_time,hot_state')            ->view('user', 'username,picurl,level_id', 'user.id=posts.user_id', 'left')            ->view('certificationType', ['title' => 'level_title'], 'certificationType.id=user.level_id', 'left')            ->where('id', $request['id'])->find();        $data['picarr'] = !empty($data['picarr']) ? unserialize($data['picarr']) : [];        if ($request['user_id'] != '') {            $collect = Db::name("collection")                ->where([                    'type' => 6,                    "collection_id" => $request['id'],                    'user_id' => $request['user_id']                ])                ->find();            $data['collection_id'] = empty($collect['id']) ? "" : $collect['id'];            $data['collection'] = empty($collect) ? 0 : 1;        } else {            $data['collection_id'] = "";            $data['collection'] = 0;        }        $parise_status = Db::name('praise')->where(['praise_id' => $request['id'], 'user_id' => $request['user_id'], 'type' => 1])->find();        if (!empty($parise_status)) {            $data['parise_status'] = 1;//点过        } else {            $data['parise_status'] = 0;//没点过        }        $data['answer'] = Db::view('posts_comments', 'id,content,reply_id,create_time,user_id,parent_id')->view('user', 'username,picurl,level_id', 'user.id=posts_comments.user_id', 'left')            ->view('certificationType', ['title' => 'level_title'], 'certificationType.id=user.level_id', 'left')            ->where(['posts_id' => $request['id'], 'parent_id' => '0'])->order(['posts_comments.id' => 'desc'])->select();        foreach ($data['answer'] as &$v) {            $v['reply'] = Db::view('posts_comments', 'id,user_id,reply_user,posts_id,reply_id,content,create_time')                ->view('user', 'username', 'user.id=posts_comments.user_id', 'left')                ->view('user u', ['username' => 'reply_user'], 'u.id=posts_comments.reply_user', 'left')                ->where('posts_comments.reply_id', $v['id'])                ->order(['posts_comments.create_time' => 'asc'])                ->select();        }        $url = 'http://wantaozb.com/home/posts/info?id='.$data['id']."&jinbao=1";        $user_id = Db::name('posts')->where('id',$request['id'])->field('user_id')->value('user_id');//echo "<pre>";//print_r($data['answer']);//echo "</pre>";        return $this->fetch(            'info', [                'title' => '帖子详情',                'data' => $data,                'share'=>$signPackage,                'url'=>$url,                'jinbao'=> empty($request['jinbao']) ? 2:$request['jinbao'],                'id' => $request['user_id'],                'user_id' => $user_id,            ]        );    }    public function add(Request $requests, PostsModel $posts, BbcType $bbcType)    {        $request = $requests->param();        if ($requests->isPost()) {            $request['user_id'] = Session::get('user_id');            $res = toImg($request['picarr']);            if ($res['picarr_type'] == 2 && $res['number'] > 1) {                return [                    'code' => 400,                    'message' => "只能上传单个视频",                ];            }            $request['picarr_type'] = $res['picarr_type'];            $request['picarr'] = $res['picarr'];            $data = $posts->allowField(true)->isUpdate(false)->save($request);            if ($data) {                return [                    'code' => 200,                    'message' => "成功",                ];            }        } else {            $data = $bbcType->where(['status' => 1])->field('type_title,id')->order('id desc')->select();            return $this->fetch(                'add', [                    'title' => '我要发帖',                    'data' => $data                ]            );        }    }    /** 杨思涵 2018-05-08* 帖子---3、一级跟帖的提交* 参数：回复的哪个问题的问题ID*/    public function commentsAdd(Request $requests, PostsModel $posts, PostsComments $comments)    {        $request = $requests->param();        $request['user_id'] = Session::get('user_id');        $result = $this->validate($request, 'Posts.commentsAdd');        if ($result !== true) {            return [                'code' => 400,                'message' => $result            ];        }        $data = $comments->allowField(true)->isUpdate(false)->save($request);//回答        if ($data) {            $posts->where('id', $request['posts_id'])->setInc('comments_num', 1);//问题表回答数量+1            return [                'code' => 200,                'message' => "提交成功",            ];        }    }    /** 杨思涵 2018-05-08* 热帖---4、回复一级跟帖的提交* 参数：回复哪个回答的回答ID*/    public function replyAdd(Request $requests, PostsComments $comments, PostsModel $posts)    {        $request = $requests->param();        $request['user_id'] = Session::get('user_id');        $result = $this->validate($request, 'Posts.replyAdd');        if ($result !== true) {            return [                'code' => 400,                'message' => $result            ];        }        $request['parent_id'] = $request['reply_id'];        $request['reply_user'] = $comments->where('id', $request['reply_id'])->value('user_id');        $data = $comments->allowField(true)->isUpdate(false)->save($request);        if ($data) {            $posts->where('id', $request['posts_id'])->setInc('comments_num', 1);//问题表回答数量+1            return [                'code' => 200,                'message' => "提交成功",            ];        }    }    /* * 杨思涵 2018-05-08 * 万淘论坛---7、回复一级跟帖的回复的提交 * 参数：回复哪个回答的回答ID */    public function replyAgainAdd(Request $requests, PostsComments $comments, PostsModel $posts)    {        $request = $requests->param();        $request['user_id'] = Session::get('user_id');        $result = $this->validate($request, 'Posts.replyAdd');        if ($result !== true) {            return [                'code' => 400,                'message' => $result            ];        }        $request['parent_id'] = $request['comments_id'];        $request['reply_user'] = $comments->where('id', $request['comments_id'])->value('user_id');        $data = $comments->allowField(true)->isUpdate(false)->save($request);        if ($data) {            $posts->where('id', $request['posts_id'])->setInc('comments_num', 1);//问题表回答数量+1            return [                'code' => 200,                'message' => "提交成功",            ];        }    }    //ajax删除    public function dele(Request $request){        $id = $request->param('id');        Db::name('posts')->where(['id'=>$id])->delete();    }}