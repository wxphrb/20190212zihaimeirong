<?php/** * Created by PhpStorm. * User: Administrator * Date: 2018/1/4 * Time: 10:28 */namespace app\home\controller;use app\home\model\IntegralGoods as IntegralGoodsModel;use app\home\model\Integral as Integral;use app\home\model\IntegralExchange as IntegralExchange;use app\home\model\IntegralInfo as IntegralInfo;use app\home\model\Address as Address;use app\home\model\User;use think\Controller;use think\Db;use think\Request;use think\Session;class Integralgoods extends Base{    /*     * 积分商城---1、列表     */    public function index(Request $requests,IntegralGoodsModel $integralGoods,User $user,Integral $integral){        $request = $requests->param();        //列表        $user_id = Session::get('user_id');        $data = $integralGoods->field('id,title,picurl,create_time,price')->order('create_time desc')->select();        $jifen =$user->where('id',$user_id)->value('integral');        return $this->fetch(            'index',[                'title'=>"积分商城",                'data'=>$data,                'jifen'=>$jifen            ]        );    }    /*     * 积分商城---1、详情     */    public function info(Request $requests,User $user,IntegralGoodsModel $integralGoods){        $request = $requests->param();        $request['user_id'] = Session::get('user_id');        $result = $this->validate($request, 'Integralgoods.info');        if ($result !== true) {            return [                'code' => 400,                'message' => $result            ];        }        $data = $integralGoods->where('id',$request['id'])->field('id,title,price,picarr,content')->find();        $data['my_integral'] = $user->where('id',$request['user_id'])->value('integral');        if($data['my_integral']>$data['price']){            $data['state'] = 1;        }else{            $data['state']=0;        }        return $this->fetch(            'info',[                'title'=>"积分商城",                'data'=>$data            ]        );    }    /*     * 积分商城---3、兑换      * 参数：商品的id 用户id     */    public function exchange(Request $requests,IntegralGoodsModel $integralGoods,Address $address){        $request = $requests->param();        $request['user_id'] = Session::get('user_id');        $result = $this->validate($request, 'Integralgoods.info');        if ($result !== true) {            return [                'code' => 400,                'message' => $result            ];        }//        halt($request);        $data =$integralGoods->where('id',$request['id'])->field('id,picurl,title,price')->find();        $address_res = $address->where(['user_id'=>$request['user_id'],'status'=>1])->find();        $address_data= empty($address_res)?[]:$address_res;        return $this->fetch(            'exchange',[                'title'=>"确认兑换",                'address'=>$address_data,                'data'=>$data            ]        );    }    /*    * 积分商城---4、确认兑换     * 参数：商品的id 用户id    */    public function exchangeAdd(Request $requests,IntegralGoodsModel $integralGoods,IntegralExchange $exchange,User $user){        $request = $requests->param();        $request['user_id'] = Session::get('user_id');        $address = Db::name("address")->where('id',$request['address_id'])->find();        if(!empty($address)){            $request['username']=$address['username'];            $request['mobile']=$address['mobile'];            $request['address'] = $address['prov'].$address['address'];        }else{            return [                'code' =>400,                'message' => "失败",            ];        }        $goods_info =$integralGoods->where('id',$request['goods_id'])->find();        $request['goods_title']  = $goods_info['title'];        $request['total'] = $goods_info['price'];        $data = $exchange->allowField(true)->isUpdate(false)->save($request);        if($data){            $user->where('id',$request['user_id'])->setDec('integral',$goods_info['price']);            Db::name('integral_info')->insert(['user_id'=>$request['user_id'],'num'=>$goods_info['price'],'type'=>3,'create_time'=>time()]);            return [                'code' =>200,                'message' => "成功",            ];        }else{            return [                'code' =>400,                'message' => "失败",            ];        }    }    /*      * 兑换记录      * 参数type 1进行中 2已完成      * */    public function note(Request $requests,IntegralExchange $exchange){        $request = $requests->param();        $request['user_id'] = Session::get('user_id');        $where['user_id'] =$request['user_id'];        if($request['type']==1){            $where['status']=['in','0,1'];        }else{            $where['status']='2';        }        $data = $exchange->where($where)->field('id,create_time,num,goods_title,status')->order('create_time desc')->select();        return $this->fetch(            'note',[                'title'=>"兑换记录",                'data'=>$data,                'type'=>$request['type']            ]        );    }    /*确认收货*/    public function takeGoods(Request $requests,IntegralExchange $exchange){        $request = $requests->param();        $data = $exchange->where('id',$request['id'])->update(['status'=>2]);        return [            'code' =>200,            'message' => "成功",        ];    }}