<?phpnamespace app\home\controller;use app\home\model\BbcType;use app\home\model\BbcQuestion;use app\home\model\BbcAnswer;use app\home\model\User;use think\Controller;use think\Db;use think\Cookie;use think\Request;use think\Session;use think\Url;use app\home\model\Share;class Bbc extends Controller{    /*     * 论坛     * */    public function index(Request $requests, BbcType $bbcType, BbcQuestion $bbcQuestion, BbcAnswer $answer)    {        $request = $requests->param();        $data['bbc_type'] = $bbcType->where(['status' => 1])->field('type_title,id')->order('id desc')->select();        //获取最后一条分类id        $iod = $bbcType->where(['status' => 1])->field('type_title,id')->order('id desc')->value('id');        //问答列表 筛选条件 分类id 关键词        $where['status'] = 1;        $type_id = 0 ;        if (!empty($request['type_id'])) {            $where['type_id'] = $request['type_id'];            $type_id = $request['type_id'];        }else{            $type_id = $iod ;        }        if (!empty($request['keyword'])) {            $where['title'] = ['like', '%' . $request['keyword'] . '%'];            $this->lishi($request['keyword']);        }        //列表        $data['list'] = $bbcQuestion->where($where)->field('id,title,answer_num,integral_num,hot_state,create_time')->order('id desc')->select();        //回答        foreach ($data['list'] as $v) {            $best_answer = $answer->where(['question_id' => $v['id'], 'status' => 1])->value('content');//问题最佳答案            if (empty($best_answer)) {//如果没有，就取最新的答案                $mew_answer = $answer->where(['question_id' => $v['id']])->order('id desc')->value('content');                $v['answer'] = empty($mew_answer) ? '' : $mew_answer;            } else {                $v['answer'] = $best_answer;            }        }        return $this->fetch(            'index', [                'title' => "万淘论坛",                'data' => $data,                'type_id' => $type_id,            ]        );    }    public function info(Request $requests, BbcType $bbcType, BbcQuestion $bbcQuestion, BbcAnswer $answer)    {        $jssdk = new Share("wx76f12421c3192e40", "d810e41dcc9d3509c0800fd6bd2f1e9b");        $signPackage = $jssdk->GetSignPackage();        $request = $requests->param();        $request['user_id'] = Session::get('user_id');        Db::name('news_info')->where(['user_id' => $request['user_id'], 'other_id' => $request['id'], 'read_state' => 0, 'type' => 1])->update(['read_state' => 1]);        //问题详情        $data = Db::view('bbcQuestion', "id,title,create_time,picarr_type,hot_state,answer_num,integral_num,content,user_id,picarr")            ->view('user', "username,picurl", 'user.id=bbcQuestion.user_id')            ->where('bbcQuestion.id', $request['id'])->find();        $data['picarr'] = !empty($data['picarr']) ? unserialize($data['picarr']) : [];        //不是我不写递归，是实现不了啊啊啊啊啊        //问题下的所有一级回复        $data['answer'] = Db::view('bbcAnswer', 'id,user_id,status,question_id,answer_id,parent_id,anonymous,content,reply_num,praise,create_time')            ->view('user', "username,picurl,level_id", 'user.id=bbcAnswer.user_id', 'left')            ->view('certificationType', ['title' => 'level_title'], 'certificationType.id=user.level_id', 'left')            ->where(['bbcAnswer.question_id' => $request['id'], 'parent_id' => 0])->order('bbcAnswer.status desc,bbcAnswer.id desc')->select();//        $data['answer']= Tool::getSubTree($data['answer']);//        halt($data);        //一级回复里有没有最佳答案        $best = Db::name('bbc_answer')->where(['question_id' => $request['id'], 'status' => 1])->find();        if (!empty($best)) {            $best_status = 1;        } else {            $best_status = 0;        }        //        halt($data);        //点没点过赞        if (!empty($data['answer'])) {            foreach ($data['answer'] as &$vv) {                //一级回答点赞详情                $parise_status = Db::name('praise')->where(['praise_id' => $vv['id'], 'user_id' => $request['user_id'], 'type' => 2])->find();                if (!empty($parise_status)) {                    $vv['parise_status'] = 1;//点过                } else {                    $vv['parise_status'] = 0;//没点过                }                $vv['question_user_id'] = $data['user_id'];                $vv['best_status'] = $best_status;            }        }        //收没收藏过        if ($request['user_id'] != '') {            $collect = Db::name("collection")                ->where([                    'type' => 3,                    "collection_id" => $request['id'],                    'user_id' => $request['user_id']                ])                ->find();            $data['collection_id'] = empty($collect['id']) ? "" : $collect['id'];            $data['collection'] = empty($collect) ? 0 : 1;        } else {            $data['collection_id'] = "";            $data['collection'] = 0;        }        if (!empty($data['answer'])) {            // 一级下的无限极回复            foreach ($data['answer'] as &$v) {                $v['two'] = Db::view('bbcAnswer', 'id,create_time,question_id,status,answer_id,user_id,content,anonymous,parent_id')                    ->view('user', "username,picurl,level_id", 'user.id=bbcAnswer.user_id', 'left')                    ->view('certificationType', ['title' => 'level_title'], 'certificationType.id=user.level_id', 'left')                    ->where(['bbcAnswer.answer_id' => $v['id'], 'parent_id' => $v['id']])->order('bbcAnswer.status desc,bbcAnswer.id desc')->select();                $v['two'] = !empty($v['two']) ? $v['two'] : [];            }            foreach ($data['answer'] as &$vv) {                foreach ($vv['two'] as &$vvv) {                    $vvv['reply'] = Db::view('bbc_answer', 'id,question_id,create_time,content,user_id,answer_id,anonymous,parent_id')                        ->view('user', 'username,picurl', 'user.id=bbc_answer.user_id', 'left')                        ->view('user u', ['username' => 'reply_user'], 'u.id=bbc_answer.reply_user', 'left')                        ->where(['bbc_answer.answer_id' => $vvv['id']])->order(['bbc_answer.parent_id' => 'asc', 'bbc_answer.create_time' => 'asc'])->select();                    $vvv['reply'] = !empty($vvv['reply']) ? $vvv['reply'] : [];                }            }        }        $url = 'http://wantaozb.com/home/bbc/info?id='.$data['id']."&jinbao=1";//echo "<pre>";//print_r($data['answer']);//echo "</pre>";        return $this->fetch(            'info', [                'title' => "问答详情",                'data' => $data,                'share'=>$signPackage,                'url'=>$url,                'id'=>$request['user_id'],                'user_id'=>$data['user_id'],                'jinbao'=> empty($request['jinbao']) ? 2:$request['jinbao'],            ]        );    }    /*     *     * */    public function answerAdd(Request $requests, BbcType $bbcType, BbcQuestion $bbcQuestion, BbcAnswer $answer)    {        $request = $requests->param();        $request['user_id'] = Session::get('user_id');        if ($requests->isPost()) {            $result = $this->validate($request, 'Bbc.answerAdd');//验证参数            if ($result !== true) {                return ['code' => 400, 'message' => $result];            }            $data = $answer->allowField(true)->isUpdate(false)->save($request);//回答            if ($data) {                $bbcQuestion->where('id', $request['question_id'])->setInc('answer_num', 1);//问题表回答数量+1                return [                    'code' => 200,                    'message' => "提交成功",                ];            }        } else {            $data = Db::view('bbc_question', 'id,title,create_time,content,answer_num,hot_state,integral_num')->view('user', 'username,picurl', 'user.id=bbc_question.user_id')                ->where('bbc_question.id', $request['id'])->find();            return $this->fetch(                'answer_add', [                    'title' => "问答详情",                    'data' => $data                ]            );        }    }    /*   * 杨思涵 2018-05-08   * 万淘论坛---6、回复回答的提交   * 参数：回复哪个回答的回答ID   */    public function replyAdd(Request $requests, BbcAnswer $answer, BbcQuestion $bbcQuestion)    {        $request = $requests->param();        $request['reply_id'] = $request['answer_id'];        $request['user_id'] = Session::get('user_id');        $result = $this->validate($request, 'Bbc.replyAdd');        if ($result !== true) {            return [                'code' => 400,                'message' => $result            ];        }        $request['parent_id'] = $request['answer_id'];        $data = $answer->allowField(true)->isUpdate(false)->save($request);        if ($data) {            $answer->where('id', $request['answer_id'])->setInc('reply_num', 1);//问题表回答数量+1            $bbcQuestion->where('id', $request['question_id'])->setInc('answer_num', 1);//问题表回答数量+1            return [                'code' => 200,                'message' => "提交成功",            ];        }    }    /*          * 杨思涵 2018-05-08          * 万淘论坛---7、回复回答下的回复          * 参数：回复哪个回答的回答ID          */    public function replyAgainAdd(Request $requests, BbcAnswer $answer, BbcQuestion $bbcQuestion)    {        $request = $requests->param();        $request['user_id'] = Session::get('user_id');        $result = $this->validate($request, 'Bbc.replyAdd');        if ($result !== true) {            return [                'code' => 400,                'message' => $result            ];        }        $request['parent_id'] = $request['reply_id'];        $request['reply_user'] = $answer->where('id', $request['reply_id'])->value('user_id');        $data = $answer->allowField(true)->isUpdate(false)->save($request);        if ($data) {            $answer->where('id', $request['answer_id'])->setInc('reply_num', 1);//问题表回答数量+1            $bbcQuestion->where('id', $request['question_id'])->setInc('answer_num', 1);//问题表回答数量+1            return [                'code' => 200,                'message' => "提交成功",            ];        }    }    public function question_add(Request $requests, BbcType $bbcType, BbcQuestion $bbcQuestion)    {        $request = $requests->param();        if ($requests->isPost()) {            $request['user_id'] = Session::get('user_id');            $res = toImg($request['picarr']);            if ($res['picarr_type'] == 2 && $res['number'] > 1) {                return [                    'code' => 400,                    'message' => "只能上传单个视频",                ];            }            $request['picarr_type'] = $res['picarr_type'];            $request['picarr'] = $res['picarr'];            $data = $bbcQuestion->allowField(true)->isUpdate(false)->save($request);            if ($data) {                return [                    'code' => 200,                    'message' => "成功",                ];            }        } else {            $data = $bbcType->where(['status' => 1])->field('type_title,id')->order('id desc')->select();            return $this->fetch(                'question_add', [                    'title' => '我要提问',                    'data' => $data                ]            );        }    }    public function lishi($keyword)    {    }    /**     * 搜索     */    public function search(){        return $this->fetch(            'search', ['title' => '搜索']        );    }    //ajax点击更好回答    public function ques(Request $request){        $data = Db::name('bbcQuestion')->field('user_id')->where('id', $request->param('id'))->find();        if(session::get('user_id') == $data['user_id']){            echo '自己不能回复自己哦';        }    }    //ajax删除    public function dele(Request $request){        $id = $request->param('id');        Db::name('bbc_question')->where(['id'=>$id])->delete();    }    //点赞    public function addlaud(Request $request){        $praise = Db::name('bbc_answer')->where(['id'=>$request->param('id')])->value('praise');        $data['praise'] = $praise+1;        db('bbc_answer')->where(['id'=>$request->param('id')])->setField($data);    }    //点赞    public function minulaud(Request $request){        $praise = Db::name('bbc_answer')->where(['id'=>$request->param('id')])->value('praise');        $data['praise'] = $praise-1;        db('bbc_answer')->where(['id'=>$request->param('id')])->setField($data);    }}