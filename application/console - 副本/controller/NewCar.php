<?phpnamespace app\console\controller;use think\Db;use think\Request;use think\Url;use app\console\model\NewCar as ThisModel;class NewCar extends Base{    public $arr_type=[];    /**	 * [index description]列表	 * @return [type] [description]	 */	public function index(ThisModel $NewCar, Request $request)	{        $name = array();        $where = '';        $page  = 1;        if ($request->param("name")) {            $post_name = Request::instance()->post('name');			//wcc($post_name);            $get_name  = $request->get("name");            $name      = $request->param("name");            $page      = $request->param("page");						//wcc($name);            if( !empty($post_name)  && $post_name != $get_name){               // $this->redirect('NewCar/index',['name'=>$post_name]);            }            if ($name) {                $where = [                    'n.p_pinpai|n.p_chexi|n.p_chexingmingcheng' => ['like', '%' . $name . '%'],                ];                $this->assign('name',$name);            }        }        $listRows = $this->show_num ? $this->show_num : 20 ;       /* $res = db::name('new_car')->field('id,p_pinpai,p_chexi,p_chexingmingcheng,p_chexizhanshitu,status')->where($where)->paginate($listRows,false,['query'=>['name'=>$name,'page'=>$page]]);*/        $res = db::name('new_car')->alias('n')            ->join('car_brand b','b.p_pinpai_id = n.p_pinpai_id')            ->field('n.id,b.p_pinpai,n.recommend,n.p_chexi,n.p_chexingmingcheng,n.p_chexizhanshitu,n.status')            ->where(['b.status'=>1])            ->where($where)            //->order($order)            ->paginate($listRows,false,['query'=>['name'=>$name,'page'=>$page]]);        return $this->fetch('index', [            'list'       => $res        ]);	}	/**     * [create description]添加方法     * @return [type] [description]     */	public function create()	{		if (Request::instance()->isPOST())		{			$data = Request::instance()->post();						$result = ThisModel::saveVerify($data);			if (true === $result) {                $this->success('新建成功', 'console/NewCar/index');            } else {                $this->error($result);            }		}        $car_parma = parent::car_param_list();        $this->assign('vo',[]);        $this->assign('car_parma',$car_parma);        $this->assign('cartype',$this->appendarg());		return $this->fetch('create');	}    /**     * [update description]更新方法     * @param  [type] $id [description]主键id     * @return [type]     [description]     */	public function update($id)	{				if (Request::instance()->isPOST())		{					$data = Request::instance()->post();							$result = ThisModel::saveVerify($data,$id);			if (true === $result) {				$page = Request::instance()->param('page');				$name = Request::instance()->param('name');				if(!empty($page)){										if(empty($name)){						 $this->success('更新成功', url('console/NewCar/index').'?page='.$page);					 }else{						 $this->success('更新成功', url('console/NewCar/index').'?page='.$page.'&name='.urldecode($name));					 }					 					 //$this->redirect('OldCar/index', ['page' => $page]);				}else{										if(empty($name)){						$this->success('更新成功', 'console/NewCar/index');					 }else{						 $this->success('更新成功', url('console/NewCar/index').'?name='.urldecode($name));					 }					 				}                            } else {                $this->error($result);            }		}        $car_parma = parent::car_param_list();		$data = ThisModel::get($id);        $this->assign('vo',$data);        $this->assign('car_parma',$car_parma);        $this->assign('cartype',$this->appendarg());		return $this->fetch('create');	}    /**     * 添加修改时候需要传递参数的话，用此方法，只写一遍     */	public function appendarg(){        $this->showtype(0);        return $this->arr_type;	}    /**     * [showtype description]无限极分类     * @param  integer $id [description]     * @param  integer $i  [description]     * @return [type]      [description]     */    public function showtype($id=0, $i=0){       /* $res = db::name('car_brand')->field('id,name,picurl')->where('parentid',$id)->order('orderid','asc')->select();*/       /* $res = db('car_brand')->alias('b')            ->join('new_car n','n.p_pinpai_id = b.p_pinpai_id')            ->field('n.p_pinpai,n.p_chexi')            ->where('b.status',1)            ->order('b.p_shouzimu')            ->paginate(10);*/        $res = db::name('car_brand')->field('id,p_pinpai_id,p_pinpai,p_shouzimu')->where('status',1)->order('p_shouzimu')->select();        foreach($res as &$v){            $title='';            for($p=1; $p<$i; $p++){                $title.='&nbsp;&nbsp;&nbsp;';            }            /*            if($v['p_pinpai_id'] != 0){                $title.='|- ';            }*/            $title.=$v['p_pinpai'];            $v['p_pinpai'] = $v['p_shouzimu'].'--'. $title;            array_push($this->arr_type, $v);            //$this->showtype($v['id'], $i+2);        }    }    /**     * [delete description]删除方法 多选和单选删除     * @return [type] [description]     */	public function delete(){		if (Request::instance()->isPOST())		{			$id = Request::instance()->post('id/a'); // (/a)方法 将收到的id转为数组						$delmodel = ThisModel::destroy($id);			if($delmodel){			    $this->success('删除成功', 'console/NewCar/index');			} 			else{				$this->error($delmodel->getError());			}	    }	    else{	    	$this->error('请求方式出错!');	    }	}			//批量更新状态	public function batch_status(){		$page = Request::instance()->param('page');		if (Request::instance()->isPOST())		{			$id = Request::instance()->post('id/a'); // (/a)方法 将收到的id转为数组			for($i=0;$i<count($id);$i++){				$data[$i]['id'] 	= $id[$i];				$data[$i]['status'] = 0;			}			$NewCar = new ThisModel();			$delmodel = $NewCar->isUpdate()->saveAll($data);			if($delmodel){			    if(!empty($page)){					 $this->success('更新成功', url('console/NewCar/index').'?page='.$page);					 //$this->redirect('OldCar/index', ['page' => $page]);				}else{					 $this->success('更新成功', 'console/NewCar/index');				}			}			else{				$this->error($delmodel->getError());			}	    }	    else{	    	$this->error('请求方式出错!');	    }	}    /**     * [renewfield description]列表更新字段     * @return [type] [description]     */	public function renewfield(){				$page = Request::instance()->param('page');		if (Request::instance()->isPOST())		{            $data = Request::instance()->post();			$validate = validate('NewCar');			$post = Request::instance()->except(['id'],'post');			$post = array_keys($post);            $validate->scene('edit', $post);			if(!$validate->scene('edit')->check($data)){			    $this->error($validate->getError());			}	        $this_model = new ThisModel();	        if($this_model->update($data))            {								$name = Request::instance()->param('name');				if(!empty($page)){										if(empty($name)){						 $this->success('更新成功', url('console/NewCar/index').'?page='.$page);					 }else{						 $this->success('更新成功', url('console/NewCar/index').'?page='.$page.'&name='.urldecode($name));					 }					 					 //$this->redirect('OldCar/index', ['page' => $page]);				}else{										if(empty($name)){						$this->success('更新成功', 'console/NewCar/index');					 }else{						 $this->success('更新成功', url('console/NewCar/index').'?name='.urldecode($name));					 }					 				}			}			else{				$this->error($this_model->getError());			}		}	    else{	    	$this->error('请求方式出错!');	    }	}}