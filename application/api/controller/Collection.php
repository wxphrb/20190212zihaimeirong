<?php/** * Created by PhpStorm. * User: Administrator * Date: 2018/1/4 * Time: 10:28 */namespace app\api\controller;use app\api\model\BbcAnswer;use app\api\model\Collection as CollectionModel;use app\api\model\Goods;use app\api\model\IndustryInformation;use app\api\model\Supply;use app\api\model\Posts;use app\api\model\User;use mrmiao\encryption\RSACrypt;use think\Controller;use think\Db;use think\Request;class Collection extends Controller{    /*     * 添加收藏     * */    public function add(RSACrypt $crypt, CollectionModel $collection,BbcAnswer $answer)    {        $request = $crypt->request();        $data = $collection->allowField(true)->isUpdate(false)->save($request);        if ($data) {            //变成热点            if($request['type'] == 3) {                //问答配置收藏数量                $webconfig_wenda = Db::name('webconfig')->where('id',20)->value('varvalue');                //问答已收藏数量                $collection3 = Db::name('collection')->where('type',3)->count('id');                if($collection3 >= $webconfig_wenda) {                    $bbc = Db::name('bbc_question')->where(['id'=>$request['collection_id'],'hot_state'=>0])->update(['hot_state'=>1]);                    if($bbc) {                        $user_id = Db::name('bbc_question')->where(['id'=>$request['collection_id']])->value('user_id');                        $webconfig_jifen = Db::name('webconfig')->where('id',23)->value('varvalue');                        Db::name('user')->where('id',$user_id)->setInc('integral',$webconfig_jifen);                    }                }            }            if($request['type'] == 5) {                //资讯配置收藏数量                $webconfig_wenda = Db::name('webconfig')->where('id',22)->value('varvalue');                //资讯已收藏数量                $collection3 = Db::name('collection')->where('type',5)->count('id');                if($collection3 >= $webconfig_wenda) {                    $bbc = Db::name('industry_information')->where(['id'=>$request['collection_id'],'hot_state'=>0])->update(['hot_state'=>1]);                    if($bbc) {                        $user_id = Db::name('industry_information')->where(['id'=>$request['collection_id']])->value('user_id');                        if($user_id != 0) {                            $webconfig_jifen = Db::name('webconfig')->where('id',23)->value('varvalue');                            Db::name('user')->where('id',$user_id)->setInc('integral',$webconfig_jifen);                        }                    }                }            }            if($request['type'] == 6) {                //帖子配置收藏数量                $webconfig_wenda = Db::name('webconfig')->where('id',10)->value('varvalue');                //帖子已收藏数量                $collection3 = Db::name('collection')->where('type',6)->count('id');                if($collection3 >= $webconfig_wenda) {                    $bbc = Db::name('posts')->where(['id'=>$request['collection_id'],'hot_state'=>0])->update(['hot_state'=>1]);                    if($bbc) {                        $user_id = Db::name('posts')->where(['id'=>$request['collection_id']])->value('user_id');                        if($user_id != 0) {                            $webconfig_jifen = Db::name('webconfig')->where('id',15)->value('varvalue');                            Db::name('user')->where('id',$user_id)->setInc('integral',$webconfig_jifen);                        }                    }                }            }            return $crypt->response(['code' => 200, 'message' => '收藏成功','data'=> $collection->id]);        } else {            return $crypt->response(['code' => 400, 'message' => '收藏失败']);        }    }    public function all(RSACrypt $crypt,CollectionModel $collection,BbcAnswer $answer)    {        $request = $crypt->request();        $data = Db::name('collection')->where(['user_id' => $request['user_id']])->select();        $res = [];        foreach ($data as &$v) {            if ($v['type'] == 1) {                $res[] = Db::view('Collection', 'id,type,collection_id,user_id')                    ->view("Goods", 'title,saleprice,sell,picurl', 'Goods.id = Collection.collection_id')                    ->where(['Goods.id' => $v['collection_id'],'Collection.type'=>1])                    ->find();            }            if ($v['type'] == 2) {                $res[] = Db::view('Collection', 'id,type,collection_id,user_id')                    ->view("Store", 'picurl,title', 'Store.id = Collection.collection_id')                    ->where(['Store.id' => $v['collection_id'],'Collection.type'=>2])                    ->find();            }            if ($v['type'] == 3) {                $res[] = Db::view('Collection', 'id,type,collection_id,user_id')                    ->view("bbc_question", 'title,create_time,answer_num,integral_num', 'bbc_question.id = Collection.collection_id')                    ->where(['bbc_question.id' => $v['collection_id'],'Collection.type'=>3])                    ->find();            }            if ($v['type'] == 4) {                $res[] = Db::view('Collection', 'id,type,collection_id,user_id')                    ->view("Supply", 'title,user_id,address,create_time', 'Supply.id = Collection.collection_id')                    ->view("User", 'username,picurl', 'User.id = Supply.user_id')                    ->where(['Supply.id' => $v['collection_id'],'Collection.type'=>4])                    ->find();            }            if ($v['type'] == 5) {                $res[] = Db::view('Collection', ['id', 'type' => 'type', 'user_id' => 'userid', 'collection_id' => 'collection_id'])                    ->view("industry_information", 'title,picarr,user_id,description,picarr_type,create_time,content', 'industry_information.id = Collection.collection_id')                    ->view("user", 'username,picurl', 'user.id = Collection.user_id')                    ->where(['industry_information.id' => $v['collection_id'],'Collection.type'=>5])                    ->find();//                $res[] = Db::name('user')->where('id',$v['user_id'])->value('username');//                $res[] = Db::name('user')->where('id',$v['user_id'])->value('picurl');            }            if ($v['type'] == 6) {                $res[] = Db::view('Collection', 'id,type,collection_id,user_id')                    ->view("Posts", 'title,picarr,praise,describe,picarr_type,comments_num,share_num,hot_state', 'Posts.id = Collection.collection_id')                    ->where(['Posts.id' => $v['collection_id'],'Collection.type'=>6])                    ->find();            }            if ($v['type'] == 7) {                $res[] = Db::view('Collection', 'id,type,collection_id,user_id')                    ->view("Job", 'title,user_id,address,create_time', 'Job.id = Collection.collection_id')                    ->view("User", 'username,picurl', 'User.id = Job.user_id')                    ->where(['Job.id' => $v['collection_id'],'Collection.type'=>7])                    ->find();            }        }//        dump($res);die;        foreach($res as $key=> &$vv){            if(isset($vv['picarr'])){                if($vv['picarr']!=''){                    $vv['picarr'] =unserialize($vv['picarr']);                }else{                    $vv['picarr']=[];                }            }            if($vv['type']==2){                $vv['peo_num'] = $collection->where(["collection_id"=> $vv['collection_id'],'type'=>2])->count();            }            if($vv['type']==3){                $best_answer = $answer->where(['question_id'=>$vv['collection_id'],'status'=>1])->value('content');//问题最佳答案                if(empty($best_answer)){//如果没有，就取最新的答案                    $mew_answer = $answer->where(['question_id'=>$v['id']])->order('id desc')->value('content');                    $vv['answer'] = empty($mew_answer)?'':$mew_answer;                }else{                    $vv['answer']=$best_answer;                }            }            if(empty($vv)) {                unset($res[$key]);            }        }        sort($res);        return $crypt->response(['code' => 200, 'message' => "成功", 'data' => $res]);    }    /*商品收藏*/    public function goods(RSACrypt $crypt, Goods $goods, CollectionModel $collection)    {        try {            $request = $crypt->request();            $where = ['type' => 1, 'user_id' => $request['user_id']];            $data = Db::view('Collection', 'id,type,collection_id,user_id')                ->view("Goods", 'title,saleprice,sell,picurl', 'Goods.id = Collection.collection_id')                ->where($where)                ->order('id desc')                ->select();            return $crypt->response(['code' => 200, 'message' => "成功", 'data' => $data]);        } catch (\Exception $e) {            return $crypt->response(['code' => 400, 'message' => '数据错误等待处理！']);        }    }    /*商家收藏*/    public function store(RSACrypt $crypt, Goods $goods, CollectionModel $collection)    {        try {            $request = $crypt->request();            $where = ['type' => 2, 'user_id' => $request['user_id']];            $data = Db::view('Collection', 'id,type,collection_id,user_id')                ->view("Store", 'picurl,title', 'Store.id = Collection.collection_id')                ->where($where)                ->order('id desc')                ->select();            foreach ($data as &$v) {                $v['peo_num'] = $collection->where(["collection_id"=> $v['collection_id'],'type'=>2])->count();            }            return $crypt->response(['code' => 200, 'message' => "成功", 'data' => $data]);        } catch (\Exception $e) {            return $crypt->response(['code' => 400, 'message' => '数据错误等待处理！']);        }    }    /*论坛收藏列表*/    public function bbc_question(RSACrypt $crypt, CollectionModel $collection, BbcAnswer $answer)    {        try {            $request = $crypt->request();            $where = ['type' => 3, 'user_id' => $request['user_id']];            $data = Db::view('Collection', 'id,type,collection_id,user_id')                ->view("bbc_question", 'id as qu_id,title,create_time,answer_num,integral_num', 'bbc_question.id = Collection.collection_id')                ->order('id desc')                ->where($where)                ->select();            foreach ($data as &$v) {                $best_answer = $answer->where(['question_id' => $v['qu_id'], 'status' => 1])->value('content');//问题最佳答案                if (!empty($best_answer)) {//如果没有，就取最新的答案                    $mew_answer = $answer->where(['question_id' => $v['collection_id']])->order('id desc')->value('content');                    $v['answer'] = empty($mew_answer) ? '' : $mew_answer;                } else {                    $v['answer'] = $best_answer;                }            }            return $crypt->response(['code' => 200, 'message' => "成功", 'data' => $data]);        } catch (\Exception $e) {            return $crypt->response(['code' => 400, 'message' => '数据错误等待处理！']);        }    }    /*供求收藏列表*/    public function supply(RSACrypt $crypt, Supply $supply, CollectionModel $collection,User $user)    {        try {            $request = $crypt->request();            $where['Supply.status']=1;            $where['Supply.state']=2;            $where['Collection.type'] = 4;            $where['Collection.user_id'] = $request['user_id'];            $data = Db::view('Collection', 'id,type,collection_id,user_id')                ->view("Supply", 'title,user_id,address,create_time', 'Supply.id = Collection.collection_id')                ->view("User", 'username,picurl', 'User.id = Supply.user_id')                ->where($where)                ->order('id desc')                ->select();            foreach ($data as &$v) {                if ($v['user_id'] != 0) {                    $v['username'] = $user->where('id', $v['user_id'])->value('username');                    $v['picurl'] = $user->where('id', $v['user_id'])->value('picurl');                } else {                    $v['username'] = '官方发布';                    $v['picurl'] = '__HOMT__/img/about_img_03.png';                }            }            return $crypt->response(['code' => 200, 'message' => "成功", 'data' => $data]);        } catch (\Exception $e) {            return $crypt->response(['code' => 400, 'message' => '数据错误等待处理！']);        }    }    /*行业资讯列表*/    public function industry(RSACrypt $crypt, IndustryInformation $industryInformation, User $user)    {        try {            $request = $crypt->request();            $where = ['type' => 5, 'userid' => $request['user_id']];            $data = Db::view('Collection', ['id','type' => 'type', 'user_id' => 'userid', 'collection_id' => 'collection_id'])                ->view("industry_information", 'title,picarr,user_id,description,picarr_type,create_time,content', 'industry_information.id = Collection.collection_id')//                ->view("User", 'id,username,picurl', 'User.id = industry_information.user_id')                ->where($where)                ->order('id desc')                ->select();            foreach ($data as &$v) {                $v['picarr'] = unserialize($v['picarr']);                if ($v['user_id'] != 0) {                    $v['username'] = $user->where('id', $v['user_id'])->value('username');                    $v['picurl'] = $user->where('id', $v['user_id'])->value('picurl');                } else {                    $v['username'] = '后台发布';                    $v['picurl'] = '';                }            }            return $crypt->response(['code' => 200, 'message' => "成功", 'data' => $data]);        } catch (\Exception $e) {            return $crypt->response(['code' => 400, 'message' => '数据错误等待处理！']);        }    }    /*帖子收藏列表*/    public function posts(RSACrypt $crypt, Posts $posts)    {        try {            $request = $crypt->request();            $where = ['type' => 6, 'user_id' => $request['user_id']];            $data = Db::view('Collection', 'id,type,collection_id,user_id')                ->view("Posts", 'title,picarr,praise,describe,picarr_type,comments_num,share_num,hot_state', 'Posts.id = Collection.collection_id')                ->where($where)                ->order('id desc')                ->select();            foreach ($data as &$v) {                $v['picarr'] = unserialize($v['picarr']);            }            return $crypt->response(['code' => 200, 'message' => "成功", 'data' => $data]);        } catch (\Exception $e) {            return $crypt->response(['code' => 400, 'message' => '数据错误等待处理！']);        }    }    /*--删除收藏*/    public function del(RSACrypt $crypt, CollectionModel $collection)    {//        try {            $request =  $crypt->request();            $delmodel = $collection                ->destroy($request['collection_id']);            if ($delmodel) {                return $crypt->response(['code' => 200, 'message' => "取消收藏成功"]);             }else{                   return $crypt->response(['code' => 400, 'message' => "收藏失败"]);             }//        } catch (\Exception $e) {//            return $crypt->response(['code' => 400, 'message' => '数据错误等待处理！']);//        }    }    public function jobs(RSACrypt $crypt, CollectionModel $collection, User $user)    {        try{            $request = $crypt->request();            $where['Job.status']=1;            $where['Collection.type'] = 7;            $where['Collection.user_id'] = $request['user_id'];            $data = Db::view('Collection', 'id,type,collection_id,user_id')                ->view("Job", 'title,user_id,address,create_time', 'Job.id = Collection.collection_id')                ->view("User", 'username,picurl', 'User.id = Job.user_id')                ->where($where)                ->order('id desc')                ->select();            foreach ($data as &$v) {                if ($v['user_id'] != 0) {                    $v['username'] = $user->where('id', $v['user_id'])->value('username');                    $v['picurl'] = $user->where('id', $v['user_id'])->value('picurl');                } else {                    $v['username'] = '官方发布';                    $v['picurl'] = '__HOME__/img/about_img_03.png';                }            }            return $crypt->response(['code' => 200, 'message' => "成功", 'data' => $data]);        }catch (\Exception $e){            return $crypt->response(['code' => 400, 'message' => '数据错误等待处理！']);        }    }}