<?phpnamespace app\console\controller;use think\Db;use think\Request;use think\Url;use app\console\model\OldCar as ThisModel;use app\console\model\NewCar;class OldCar extends Base{    public $arr_type=[];    /**	 * [index description]列表	 * @return [type] [description]	 */	public function index(ThisModel $OldCar, Request $request)	{        $name  = array();        $where = '';		$page1 = $request->param("page");		        $page  = isset($page1) ? $request->param("page") :1;        if ($request->param("name")) {            $post_name = Request::instance()->post('name');            $get_name  = $request->get("name");            $name      = $request->param("name");            $page      = $request->param("page");            if( !empty($post_name)  && $post_name != $get_name){                //$this->redirect('OldCar/index',['name'=>$post_name]);            }            if ($name) {                $where = [                    'brandName|groupName|standardName' => ['like', '%' . $name . '%'],                ];                $this->assign('name',$name);            }        }        $listRows = $this->show_num ? $this->show_num : 20 ;        $res      = $OldCar                    ->field('id,brandName,groupName,vehicleName,createtime,status_buy,status,new_car_id,recommend,ch_id,licheng')                    ->where($where)                    ->order(['id'=>'desc','status'=>'desc','status_buy'=>'desc'])                    ->paginate($listRows,false,['query'=>['name'=>$name,'page'=>$page]]);        /*        $res = db::name('old_car')->alias('o')            ->join('car_brand b','b.p_pinpai_id = o.p_pinpai_id')            ->field('o.id,o.brandName,o.groupName,o.displacement,o.yearPattern,o.status')            ->where(['b.status'=>1])            ->where($where)            //->order($order)            ->paginate($listRows,false,['query'=>['name'=>$name,'page'=>$page]]);*/			$this->assign('pagenum',$page);        return $this->fetch('index', [            'list'       => $res        ]);	}	/**     * [create description]添加方法     * @return [type] [description]     */	public function create()	{		if (Request::instance()->isPOST())		{			$data1 = Request::instance()->post();			if(!isset($data1['param_id'])){                unset($data1['id']);                $data = $data1;                $data['createtime'] = date('Y-m-d H:i:s');                $data['status']    = 1;            }else {                $param_id = $data1['param_id'];                $data['brandName'] = $data1['brandName'][$param_id];                $data['groupCode'] = $data1['groupCode'][$param_id];                $data['groupName'] = $data1['groupName'][$param_id];                $data['vehicleName'] = $data1['vehicleName'][$param_id];                $data['importFlag'] = $data1['importFlag'][$param_id];                $data['standardName'] = $data1['standardName'][$param_id];                $data['vehicleColor'] = $data1['vehicleColor'][$param_id];                $data['displacement'] = $data1['displacement'][$param_id];                $data['effluentStandard'] = $data1['effluentStandard'][$param_id];                $data['yearPattern'] = $data1['yearPattern'][$param_id];                $data['uploadDate'] = $data1['uploadDate'][$param_id];                $data['standardname2'] = $data1['standardname2'][$param_id];                $data['purchasePrice'] = $data1['purchasePrice'][$param_id];                $data['listPrice'] = $data1['listPrice'][$param_id];                $data['gearboxType'] = $data1['gearboxType'][$param_id];                $data['gearNum'] = $data1['gearNum'][$param_id];                $data['supplyOil'] = $data1['supplyOil'][$param_id];                $data['fuelJetType'] = $data1['fuelJetType'][$param_id];                $data['engineModel'] = $data1['engineModel'][$param_id];                $data['drivenType'] = $data1['drivenType'][$param_id];                $data['engineModel'] = $data1['engineModel'][$param_id];                $data['familyName'] = $data1['familyName'][$param_id];                $data['seat'] = $data1['seat'][$param_id];                $data['cfgLevel'] = $data1['cfgLevel'][$param_id];                $data['marketDate'] = $data1['marketDate'][$param_id];                $data['vehicleSize'] = $data1['vehicleSize'][$param_id];                $data['wheelbase'] = $data1['wheelbase'][$param_id];                $data['fullWeight'] = $data1['fullWeight'][$param_id];                $data['power'] = $data1['power'][$param_id];                $data['bodyType'] = $data1['bodyType'][$param_id];                $data['vehicleId'] = $data1['vehicleId'][$param_id];                $data['vin'] = $data1['vin'];                $data['createtime'] = date('Y-m-d H:i:s');                $data['ch_id'] = 0;            }			$result = ThisModel::saveVerify($data);			if (true === $result) {                $this->success('新建成功', 'console/OldCar/index');            } else {                $this->error($result);            }		}		$chehang     = db('chehang')->order('shouzimu','asc')->select();        $this->assign('chehang',$chehang);        $create_type = empty(Request::instance()->param('type')) ? 0 : 1 ;        $car_parma   = parent::old_car_param_list();        $this->assign('vo',[]);        $this->assign('create_type',$create_type);        $this->assign('car_parma',$car_parma);        $this->assign('cartype',$this->appendarg());        return $this->fetch('create');	}    /**     * [update description]更新方法     * @param  [type] $id [description]主键id     * @return [type]     [description]     */	public function update($id)	{		if (Request::instance()->isPOST())		{			$data = Request::instance()->post();			if(empty($data['p_chexi_id'])){			    $data['p_chexi_id'] = $data['up_chexi_id'];            }            if(empty($data['new_car_id'])){			    $data['new_car_id'] = $data['up_new_car_id'];            }            $data['status']    = 1;			$result = ThisModel::saveVerify($data,$id);			if (true === $result) {				$page = Request::instance()->param('page');				$name = Request::instance()->param('name');				if(!empty($page)){										if(empty($name)){						 $this->success('更新成功', url('console/OldCar/index').'?page='.$page);					 }else{						 $this->success('更新成功', url('console/OldCar/index').'?page='.$page.'&name='.urldecode($name));					 }					 					 //$this->redirect('OldCar/index', ['page' => $page]);				}else{										if(empty($name)){						$this->success('更新成功', 'console/OldCar/index');					 }else{						 $this->success('更新成功', url('console/OldCar/index').'?name='.urldecode($name));					 }					 				}                //$this->success('更新成功', 'console/OldCar/index');            } else {                $this->error($result);            }		}        $NewCar = new NewCar;        $car_parma = parent::old_car_param_list();        $data = ThisModel::get($id);        if(!empty($data['new_car_id'])){             $new_car_data = $NewCar->Field('p_chexingmingcheng,p_chexi,p_chexi_id')->where(['p_chexi_id'=>$data['p_chexi_id'],'id'=>$data['new_car_id']])->find();            $this->assign('new_car_data',$new_car_data);        }        $chehang = db('chehang')->order('shouzimu','asc')->select();        $this->assign('vo',$data);        $this->assign('chehang',$chehang);        $this->assign('car_parma',$car_parma);        $this->assign('create_type',1);        $this->assign('cartype',$this->appendarg());        return $this->fetch('create');	}    /*查看详细参数*/    public function showinfo($id)    {        $NewCar = new NewCar;        $car_parma    = parent::car_param_list();        $basic_parma  = parent::old_car_param_list();        $old_car_data = ThisModel::get($id);        if(!empty($old_car_data['new_car_id'])){            $new_car_data = $NewCar->where(['p_chexi_id'=>$old_car_data['p_chexi_id'],'id'=>$old_car_data['new_car_id']])->find();            $this->assign('new_car_data',$new_car_data);        }        $this->assign('old_car_data',$old_car_data);        $this->assign('car_parma',$car_parma);        $this->assign('basic_parma',$basic_parma);        $this->assign('cartype',$this->appendarg());        return $this->fetch('showinfo');    }    public function vincode()    {        if (Request::instance()->isPOST())        {            $data         = Request::instance()->post();            $parma['vin'] = strtoupper($data['vin']);            $v_data       = db('old_car')->where('vin',$parma['vin'])->field('id,createtime')->find();            if(!empty($v_data)){                $this->error('该vin识别码，已在'.$v_data['createtime'].'被录入系统');            }            $parma['key'] = '3b8219f00d2939b26dce9260c7682953';            $res_data     = json_decode(wxp_curl_request('http://v.juhe.cn/vinParse/query.php',$parma),true);            if($res_data['reason'] == 'success'){               $vehicleList = $res_data['result']['vehicleList'];                $this->assign('count_vehicleList',count($vehicleList));                $this->assign('vehicleList',$vehicleList);                $this->assign('vin',$parma['vin']);            }else{                $this->error($res_data['reason']);            }        //wcc($vehicleList);        $car_parma = parent::old_car_param_list();        //wcc($car_parma);        //色彩背景        //$color_data = ['#d9534f','#5bc0de','#3c763d','#8a6d3b','#f0ad4e','#333','#3f4df3','#8244a9','#41d044','#ff0000'];        $this->assign('vo',[]);        $this->assign('car_parma',$car_parma);       // $this->assign('color_data',$color_data);        //$this->assign('cartype',$this->appendarg());            return $this->fetch('vincode');        }else{            $this->error('参数错误');        }    }    /**     * 添加修改时候需要传递参数的话，用此方法，只写一遍     */	public function appendarg(){        $this->showtype(0);        return $this->arr_type;	}    /**     * [showtype description]无限极分类     * @param  integer $id [description]     * @param  integer $i  [description]     * @return [type]      [description]     */    public function showtype($id=0, $i=0){        /* $res = db::name('car_brand')->field('id,name,picurl')->where('parentid',$id)->order('orderid','asc')->select();*/        /* $res = db('car_brand')->alias('b')             ->join('new_car n','n.p_pinpai_id = b.p_pinpai_id')             ->field('n.p_pinpai,n.p_chexi')             ->where('b.status',1)             ->order('b.p_shouzimu')             ->paginate(10);*/        $res = db::name('car_brand')->field('id,p_pinpai_id,p_pinpai,p_shouzimu')->where('status',1)->order('p_shouzimu','asc')->select();        foreach($res as &$v){            $title='';            for($p=1; $p<$i; $p++){                $title.='&nbsp;&nbsp;&nbsp;';            }            /*            if($v['p_pinpai_id'] != 0){                $title.='|- ';            }*/            $title.=$v['p_pinpai'];            $v['p_pinpai'] = $title;            array_push($this->arr_type, $v);            //$this->showtype($v['id'], $i+2);        }    }    /**     * [delete description]删除方法 多选和单选删除     * @return [type] [description]     */	public function delete(){		if (Request::instance()->isPOST())		{			$id = Request::instance()->post('id/a'); // (/a)方法 将收到的id转为数组			$delmodel = ThisModel::destroy($id);			if($delmodel){			    $this->success('删除成功', 'console/OldCar/index');			}			else{				$this->error($delmodel->getError());			}	    }	    else{	    	$this->error('请求方式出错!');	    }	}    /**     * [renewfield description]列表更新字段     * @return [type] [description]     */	public function renewfield(){		$page = Request::instance()->param('page');		if (Request::instance()->isPOST())		{            $data = Request::instance()->post();			$validate = validate('OldCar');			$post = Request::instance()->except(['id'],'post');			$post = array_keys($post);            $validate->scene('edit', $post);			if(!$validate->scene('edit')->check($data)){			    $this->error($validate->getError());			}	        $this_model = new ThisModel();	        if($this_model->update($data))            {				/*				if(!empty($page)){					 $this->success('更新成功', url('console/OldCar/index').'?page='.$page);					 //$this->redirect('OldCar/index', ['page' => $page]);				}else{					 $this->success('更新成功', 'console/OldCar/index');				}				*/				$name = Request::instance()->param('name');				if(!empty($page)){										if(empty($name)){						 $this->success('更新成功', url('console/OldCar/index').'?page='.$page);					 }else{						 $this->success('更新成功', url('console/OldCar/index').'?page='.$page.'&name='.urldecode($name));					 }					 					 //$this->redirect('OldCar/index', ['page' => $page]);				}else{										if(empty($name)){						$this->success('更新成功', 'console/OldCar/index');					 }else{						 $this->success('更新成功', url('console/OldCar/index').'?name='.urldecode($name));					 }					 				}			   			}			else{				$this->error($this_model->getError());			}		}	    else{	    	$this->error('请求方式出错!');	    }	}	public function renewfieldtwo(){		$page = Request::instance()->param('page');		if (Request::instance()->isGET())		{            $data1 = Request::instance()->param();			$data['id']		    = $data1['id'];			$data['status_buy'] = $data1['status_buy'];			$validate = validate('OldCar');			$post = Request::instance()->except(['id'],'param');			$post = array_keys($post);            $validate->scene('edit', $post);			if(!$validate->scene('edit')->check($data)){			    $this->error($validate->getError());			}	        $this_model = new ThisModel();	        if($this_model->update($data))            {				if(!empty($page)){					 $this->success('更新成功', url('console/OldCar/index').'?page='.$page);					 //$this->redirect('OldCar/index', ['page' => $page]);				}else{					 $this->success('更新成功', 'console/OldCar/index');				}			   			}			else{				$this->error($this_model->getError());			}		}	    else{	    	$this->error('请求方式出错!');	    }	}	public function getcarlist(Request $request){        if (Request::instance()->isPOST()) {            $p_pinpai_id = $request->post('p_pinpai_id');            $res = db('new_car')->field('id,p_chexi,p_chexi_id')->where(['p_pinpai_id'=> $p_pinpai_id])->group('p_chexi_id')->select();            return ['code'=>200,'data'=>$res];        }else{            return ['code'=>400];        }    }    public function getchexilist(Request $request){        if (Request::instance()->isPOST()) {            $p_chexi_id = $request->post('p_chexi_id');            $res = db('new_car')->field('id,p_chexingmingcheng')->where(['p_chexi_id'=> $p_chexi_id])->select();            return ['code'=>200,'data'=>$res];        }else{            return ['code'=>400];        }    }}