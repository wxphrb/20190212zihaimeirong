<?phpnamespace app\console\controller;use think\Db;use think\Request;use think\Url;use app\console\model\Banner as ThisModel;use app\console\model\BannerType as TypeModel;class Banner extends Base{    public $arr_type=[];    /**	 * [index description]列表	 * @return [type] [description]	 */	public function index()	{		if(input('?param.tid')){			$tid = input('param.tid');			$where['type_id']=$tid;		}		else{			$tid = 0;			$where=[];		}		$data = ThisModel::order('id', 'desc')->where($where)->paginate(8);		$type = TypeModel::order('orderid', 'asc')->select();        return $this->fetch('index', [            'list'       => $data,            'type'       => $type,            'tid'       => $tid,        ]);	}	/**     * [create description]添加方法     * @return [type] [description]     */	public function create()	{		if (Request::instance()->isPOST())		{			$data = Request::instance()->post();			if($data['target'] == 0) {//不挑妆				$data['content'] = $data['content0'];			} elseif($data['target'] == 1) {//web页				$data['content'] = $data['content1'];			} elseif($data['target'] == 2) {//二手车				$data['content'] = $data['content2'];			} elseif($data['target'] == 3){ //新车				$data['content'] = $data['content3'];			}elseif($data['target'] == 4){ //链接跳转				$data['content'] = $data['content4'];			}//			dump($data);die;			$result = ThisModel::saveVerify($data);			if (true === $result) {                $this->success('新建成功', 'console/Banner/index');            } else {                $this->error($result);            }		}		$param = $this->appendarg();        $this->assign('new_car',[]);		return $this->fetch('create', $param);	}    /**     * [update description]更新方法     * @param  [type] $id [description]主键id     * @return [type]     [description]     */	public function update($id)	{		if (Request::instance()->isPOST())		{			$data = Request::instance()->post();			if($data['target'] == 0) { //不跳转				$data['content'] = $data['content0'];			} elseif($data['target'] == 1) { //单页				$data['content'] = $data['content1'];			} elseif($data['target'] == 2) { //二手车				$data['content'] = $data['content2'];			/*} elseif($data['target'] == 3){ //新车				$data['content'] = $data['content3'];*/			}elseif($data['target'] == 4){   //url				$data['content'] = $data['content4'];			}elseif($data['target'] == 5){				$data['content'] = $data['content5'];			}			$result = ThisModel::saveVerify($data,$id);			if (true === $result) {                $this->success('更新成功', 'console/Banner/index');            } else {                $this->error($result);            }		}		$data = ThisModel::get($id);//		halt($data);		$param =  $this->appendarg();		return $this->fetch('create', [			'old_car'=>$param['old_car'],			'new_car'=>[],			'vo'=>$data,		]);	}    /**     * 添加修改时候需要传递参数的话，用此方法，只写一遍     */	public function appendarg(){		$type = db::name('banner_type')->field('id,title')->order('orderid','asc')->select();		//$new_car = db::name('new_car')->field('id,p_chexingmingcheng')->where('status',1)->order('id','desc')->select();//		$good_type = db::name('goods_type')->field('id,title')->where('parentid',0)->order('id','asc')->select();        $old_car = db::name('old_car')->field('id,vehicleName')->where('status',1)->order('id','desc')->limit('50')->select();        return [            'type'   => $type,            //'new_car'=> $new_car,			'old_car'=> $old_car,			'vo'=>0        ];	}    public function showtype($id =0, $i=0){        $res = db::name('goods_type')->field('id,parentid,title')->where('parentid',$id)->order('orderid','asc')->select();        foreach($res as &$v){            $title='';            for($p=1; $p<$i; $p++){                $title.='&nbsp;&nbsp;&nbsp;';            }            if($v['parentid'] != 0){                $title.='|- ';            }            $title.=$v['title'];            $v['title'] = $title;            array_push($this->arr_type, $v);            $this->showtype($v['id'], $i+2);        }    }    /**     * [delete description]删除方法 多选和单选删除     * @return [type] [description]     */	public function delete(){		if (Request::instance()->isPOST())		{			$id = Request::instance()->post('id/a'); // (/a)方法 将收到的id转为数组			$delmodel = ThisModel::destroy($id);			if($delmodel){			    $this->success('删除成功', 'console/Banner/index');			}			else{				$this->error($delmodel->getError());			}	    }	    else{	    	$this->error('请求方式出错!');	    }	}    /**     * [renewfield description]列表更新字段     * @return [type] [description]     */	public function renewfield(){		if (Request::instance()->isPOST())		{            $data = Request::instance()->post();			$validate = validate('Banner');			$post = Request::instance()->except(['id'],'post');			$post = array_keys($post);            $validate->scene('edit', $post);			if(!$validate->scene('edit')->check($data)){			    $this->error($validate->getError());			}	        $this_model = new ThisModel();	        if($this_model->update($data))            {			    $this->success('更新成功', 'console/Banner/index');			}			else{				$this->error($this_model->getError());			}		}	    else{	    	$this->error('请求方式出错!');	    }	}}